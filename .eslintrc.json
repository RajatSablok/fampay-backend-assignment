{
	"env": {
		"browser": false,
		"es6": true,
		"node": true
	},
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": "tsconfig.json",
		"sourceType": "module",
		"tsconfigRootDir": "./"
	},
	"plugins": ["@typescript-eslint", "prettier", "sonarjs", "import"],
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/eslint-recommended",
		"plugin:@typescript-eslint/recommended",
		"prettier",
		"plugin:import/recommended",
		"plugin:import/typescript",
		"plugin:sonarjs/recommended"
	],
	"rules": {
		"brace-style": [
			"error",
			"1tbs"
		],
		"no-tabs": 0,
		"semi": "error",
		"global-require": 0,
		"no-param-reassign": 0,
		"max-len": [
			"warn",
			{
				"code": 120,
				"tabWidth": 2,
				"comments": 200,
				"ignoreComments": false,
				"ignoreTrailingComments": true,
				"ignoreUrls": true,
				"ignoreStrings": true,
				"ignoreTemplateLiterals": true,
				"ignoreRegExpLiterals": true
			}
		],
		"no-underscore-dangle": "off",
		"no-unused-expressions": "off",
		"import/prefer-default-export": "off",
		"no-shadow": "off",
		"prettier/prettier": [
			"error",
			{
				"useTabs": true,
				"printWidth": 120,
				"tabWidth": 4,
				"singleQuote": true,
				"semi": true,
				"trailingComma": "all",
				"bracketSpacing": true,
				"rcVerbose": true,
				"arrowParens": "always"
			}
		],
		"@typescript-eslint/naming-convention": [
			"error",
			{
				"selector": "default",
				"format": ["camelCase", "UPPER_CASE"],
				"leadingUnderscore": "allow",
				"trailingUnderscore": "allow"
			},
			{
				"selector": ["typeLike"],
				"format": ["PascalCase"]
			},
			{
				"selector": ["variable"],
				"modifiers": ["const", "exported"],
				"format": ["camelCase", "UPPER_CASE", "PascalCase"]
			},
			{
				"selector": [
					"classProperty",
					"objectLiteralProperty",
					"typeProperty",
					"classMethod",
					"objectLiteralMethod",
					"typeMethod",
					"accessor",
					"enumMember"
				],
				"format": null,
				"modifiers": ["requiresQuotes"]
			},
			{
				"selector": ["typeAlias"],
				"prefix": ["T"],
				"format": ["PascalCase"]
			},
			{
				"selector": ["interface"],
				"prefix": ["I"],
				"format": ["PascalCase"]
			},
			{
				"selector": ["enum"],
				"suffix": ["Enum"],
				"format": ["PascalCase"]
			},
			{
				"selector": ["enumMember"],
				"format": null
			},
			{
				"selector": "variable",
				"modifiers": ["destructured"],
				"format": null
			}
		],
		"@typescript-eslint/explicit-module-boundary-types": 0,
		"@typescript-eslint/explicit-function-return-type": 0,
		"@typescript-eslint/interface-name-prefix": 0,
		"@typescript-eslint/strict-boolean-expressions": 0,
		"import/order": [
			"error",
			{
				"groups": [
					"builtin",
					"internal",
					"external",
					"object",
					"type",
					"parent",
					"sibling",
					"index"
				],
				"alphabetize": {
					"order": "asc",
					"caseInsensitive": true
				},
				"newlines-between": "always",
				"pathGroupsExcludedImportTypes": ["builtin"]
			}
		],
		"import/first": 1,
		// "import/exports-last": ["error"],
		"import/no-namespace": 1,
		"import/extensions": ["error", "never"],
		"import/no-useless-path-segments": [
			"error",
			{
				"noUselessIndex": true
			}
		],
		"import/no-deprecated": 1,
		"import/no-commonjs": ["error"],
		"import/no-default-export": ["error"],
		"import/no-unassigned-import": [
			"error",
			{ "allow": ["dotenv-safe/config", "newrelic"] }
		],
		"import/no-duplicates": ["error"],
		"import/no-cycle": ["error"],
		"sonarjs/cognitive-complexity": ["error"],
		"sonarjs/no-identical-expressions": ["error"],
		"eqeqeq": ["error", "always"],
		"max-params": ["error", 4],
		"no-console": ["error"],
		"no-lonely-if": ["error"],
		"no-useless-return": ["error"],
		"spaced-comment": ["error", "always"],
		"yoda": ["error", "never"],
		"@typescript-eslint/array-type": [
			"error",
			{ "default": "generic", "readonly": "generic" }
		],
		"@typescript-eslint/consistent-generic-constructors": ["error"],
		"@typescript-eslint/consistent-indexed-object-style": ["error"],
		"@typescript-eslint/consistent-type-definitions": ["error", "type"],
		"@typescript-eslint/ban-types": ["error"],
		"@typescript-eslint/method-signature-style": ["error"],
		"@typescript-eslint/no-confusing-non-null-assertion": ["warn"],
		"@typescript-eslint/no-duplicate-enum-values": ["error"],
		"@typescript-eslint/no-explicit-any": ["error"],
		"@typescript-eslint/no-floating-promises": [
			"warn",
			{ "ignoreIIFE": true }
		],
		"@typescript-eslint/no-for-in-array": ["error"],
		"@typescript-eslint/no-non-null-asserted-optional-chain": ["error"],
		"@typescript-eslint/no-unnecessary-condition": ["error"],
		"@typescript-eslint/non-nullable-type-assertion-style": ["warn"]
	}
}
